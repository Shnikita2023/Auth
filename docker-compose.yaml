version: '3.9'

services:
  database:
    image: postgres:latest
    restart: always
    container_name: "database_auth"
    volumes:
      - ./pg_data:/var/lib/postgresql/data
    env_file:
      - .env
    ports:
      - "5476:5432"
    networks:
      - custom

  zookeeper:
    image: wurstmeister/zookeeper
    container_name: "zookeeper"
    ports:
      - "2181:2181"
    restart: always
    networks:
      - custom

  kafka:
    image: wurstmeister/kafka
    depends_on:
      - zookeeper
    container_name: "kafka"
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    restart: always
    networks:
      - custom

  kafdrop:
    image: obsidiandynamics/kafdrop
    container_name: "kafdrop"
    environment:
      KAFKA_BROKERCONNECT: kafka:9093
    ports:
      - "9000:9000"
    restart: always
    networks:
      - custom


networks:
  custom:
    driver: bridge
